name: PHP CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  tests:
    name: Tests & Quality (PHP ${{ matrix.php-version }})
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: ["ubuntu-latest", "macos-latest"]
        php-version: ["8.2", "8.3", "8.4"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.35.5
        with:
          php-version: ${{ matrix.php-version }}
          extensions: intl, zip, opcache
          ini-values: post_max_size=256M, max_execution_time=180
          coverage: xdebug
          tools: composer:v2

      - name: Validate composer.json
        run: composer validate --strict

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-deps-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-${{ matrix.php-version }}-deps-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run PHPUnit unit tests
        run: composer test:unit

      - name: Run PHPUnit integration tests
        run: composer test:int

      - name: Run tests coverage
        if: matrix.operating-system == 'ubuntu-latest' && matrix.php-version == '8.3'
        run: composer test:coverage:xml

      - name: Upload coverage to Codecov
        if: matrix.operating-system == 'ubuntu-latest' && matrix.php-version == '8.3'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./var/coverage.xml
          fail_ci_if_error: true
          verbose: true

      # - name: Run PHPStan
      #   run: composer code:analyse:check

      - name: Run PHP-CS-Fixer
        run: composer code:lint:check
